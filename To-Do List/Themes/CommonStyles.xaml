<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="ModernButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.9"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="0.8"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="IconButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            CornerRadius="10"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#1AFFFFFF"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#33FFFFFF"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ThemeToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Border"
                            Background="Transparent"
                            BorderThickness="0"
                            CornerRadius="16"
                            Width="32"
                            Height="32">
                        <Grid>
                            <Path x:Name="SunIcon"
                                  Data="M12,7 A5,5 0 1,0 12,17 A5,5 0 1,0 12,7 M12,3 L12,5 M12,19 L12,21 M3,12 L5,12 M19,12 L21,12 M5.636,5.636 L7.05,7.05 M16.95,16.95 L18.364,18.364 M5.636,18.364 L7.05,16.95 M16.95,7.05 L18.364,5.636"
                                  Stroke="{DynamicResource TextPrimaryColor}"
                                  StrokeThickness="1.5"
                                  Visibility="Visible"/>
                            <Path x:Name="MoonIcon"
                                  Data="M12,3 C16.971,3 21,7.029 21,12 C21,16.971 16.971,21 12,21 C17,21 17,3 12,3 Z"
                                  Fill="{DynamicResource TextPrimaryColor}"
                                  Visibility="Collapsed"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="SunIcon" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="MoonIcon" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource SurfaceColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="16,10"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource DividerColor}"
                            BorderThickness="1"
                            CornerRadius="4">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="0" Padding="{TemplateBinding Padding}"/>
                            <TextBlock x:Name="PlaceholderText" 
                                       Text="Add a new task..." 
                                       Padding="{TemplateBinding Padding}"
                                       Foreground="{DynamicResource TextSecondaryColor}"
                                       Visibility="Collapsed"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="PlaceholderText" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Border x:Name="Border" 
                                Width="20" 
                                Height="20"
                                CornerRadius="2"
                                BorderBrush="{DynamicResource TextSecondaryColor}"
                                BorderThickness="2"
                                Background="Transparent">
                            <Path x:Name="CheckMark"
                                  Width="10"
                                  Height="8"
                                  Data="M1,4 L4,7 L9,1"
                                  Stroke="White"
                                  StrokeThickness="2"
                                  Visibility="Collapsed"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                        </Border>
                        <ContentPresenter VerticalAlignment="Center" 
                                          HorizontalAlignment="Left" 
                                          Margin="26,0,0,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryColor}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource PrimaryColor}"/>
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource PrimaryLightColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernTodoItemStyle" TargetType="ListBoxItem">
        <Setter Property="Padding" Value="16,12"/>
        <Setter Property="Margin" Value="0,4"/>
        <Setter Property="Background" Value="{DynamicResource SurfaceColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource DividerColor}"
                            BorderThickness="1"
                            CornerRadius="8"
                            Margin="{TemplateBinding Margin}"
                            Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox Grid.Column="0" 
                                      VerticalAlignment="Center" 
                                      IsChecked="{Binding IsCompleted}"
                                      Style="{StaticResource ModernCheckBoxStyle}"/>
                            <TextBlock Grid.Column="1" 
                                       Margin="12,0,0,0" 
                                       Text="{Binding Text}" 
                                       FontSize="14"
                                       TextWrapping="Wrap"
                                       VerticalAlignment="Center">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryColor}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsCompleted}" Value="True">
                                                <Setter Property="TextDecorations" Value="Strikethrough"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextSecondaryColor}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <Button Grid.Column="2" 
                                    Content="×" 
                                    FontSize="18"
                                    Style="{StaticResource IconButtonStyle}"
                                    Foreground="{DynamicResource ErrorColor}"
                                    FontWeight="Bold"
                                    Command="{Binding DataContext.DeleteCommand, 
                                              RelativeSource={RelativeSource FindAncestor, 
                                              AncestorType={x:Type ListBox}}}"
                                    CommandParameter="{Binding}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ItemHoverColor}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource ItemSelectedColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>